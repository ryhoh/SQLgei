
--------------------
-- Views
--------------------

CREATE VIEW matsuya (id, store_id, name, yen) AS 
       SELECT foods.id, foods.store_id, foods.name, foods.yen
         FROM foods
         JOIN stores ON stores.id = foods.store_id
        WHERE stores.name = 'ÊùæÂ±ã'
        ORDER BY RANDOM();
 GRANT SELECT ON matsuya TO bot;

CREATE VIEW saizeriya (id, store_id, name, yen) AS 
       SELECT foods.id, foods.store_id, foods.name, foods.yen
         FROM foods
         JOIN stores ON stores.id = foods.store_id
        WHERE stores.name = '„Çµ„Ç§„Çº„É™„É§'
        ORDER BY RANDOM();
 GRANT SELECT ON saizeriya TO bot;

CREATE VIEW starbucks (id, store_id, name, yen) AS 
       SELECT foods.id, foods.store_id, foods.name, foods.yen
         FROM foods
         JOIN stores ON stores.id = foods.store_id
        WHERE stores.name = '„Çπ„Çø„Éº„Éê„ÉÉ„ÇØ„Çπ'
        ORDER BY RANDOM();
 GRANT SELECT ON starbucks TO bot;

-- „É°„Çø„Éá„Éº„ÇøÂá∫ÂäõÁî®
CREATE VIEW help (title, contents) AS
       SELECT bd.title, bd.contents
         FROM bot_detail AS bd
        ORDER BY bd.id ASC;
 GRANT SELECT ON help TO bot;

-- „ÉÜ„Éº„Éñ„É´‰∏ÄË¶ßÂèñÂæóÁî®
CREATE VIEW tables (schemaname, tablename) AS
       SELECT schemaname, tablename
         FROM pg_tables
        WHERE schemaname NOT LIKE 'pg_%' AND schemaname != 'information_schema';
 GRANT SELECT ON tables TO bot;

--------------------
-- Functions
--------------------

CREATE FUNCTION unkosay (str anyelement) RETURNS TEXT AS $$
BEGIN
       RETURN CONCAT('üí©{ ', str);
END;
$$ LANGUAGE plpgsql;

CREATE FUNCTION shout (str TEXT)
       RETURNS TABLE (
              val text
       )
       AS $$
       SELECT
              CONCAT('Ôºø‰∫∫', repeat('‰∫∫', floor(octet_length(str) / 3 * 0.97)::integer), 'Ôºø')
       UNION ALL
       SELECT
              CONCAT('Ôºû', str, 'Ôºú')
       UNION ALL
       SELECT
              CONCAT('Ôø£Y', repeat('^Y', floor(octet_length(str) / 3 * 0.73)::integer), 'Ôø£');
$$
LANGUAGE sql;

CREATE FUNCTION unkoshout (str TEXT)
       RETURNS TABLE (
              val text
       )
       AS $$
       SELECT
              CONCAT('„ÄÄ üí©„ÄÄ„ÄÄÔºø‰∫∫', repeat('‰∫∫', floor(octet_length(str) / 3 * 0.97)::integer), 'Ôºø')
       UNION ALL
       SELECT
              CONCAT(' üëÅüëÅ„ÄÄÔºû', str, 'Ôºú')
       UNION ALL
       SELECT
              CONCAT('üí©üëÑüí©Ôø£Y', repeat('^Y', floor(octet_length(str) / 3 * 0.73)::integer), 'Ôø£');
$$
LANGUAGE sql;
